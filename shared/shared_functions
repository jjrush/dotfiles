#!/bin/bash

# Path management functions
add_to_path_front() {
    if [[ ":$PATH:" != *":$1:"* ]]; then
        export PATH="$1:$PATH"
    fi
}

add_to_path_back() {
    if [[ ":$PATH:" != *":$1:"* ]]; then
        export PATH="$PATH:$1"
    fi
}

# Project creation function
make_project() {
    local name=$1 py=${2:-"3.13"}
    mkdir "$name" && cd "$name" || return
    printf '[project]\nname="%s"\n' "$name" > pyproject.toml
    uv venv --python "$py"
    git init && echo ".venv/" > .gitignore
    echo "# $name" > README.md
}

# Copy dotfiles function (will be updated to work with new structure)
copy_dotfiles() {
    local target_dir="$1"
    local source_dir="$HOME"
    local files=(".bashrc" ".zshrc" ".bash_aliases" ".zsh_aliases" ".bash_func" ".zsh_func")
    
    if [[ -z "$target_dir" ]]; then
        echo "Error: Please provide a target directory"
        echo "Usage: copy_dotfiles <target_directory>"
        return 1
    fi
    
    if [[ ! -d "$target_dir" ]]; then
        echo "Creating target directory: $target_dir"
        mkdir -p "$target_dir" || {
            echo "Error: Failed to create target directory"
            return 1
        }
    fi
    
    for file in "${files[@]}"; do
        if [[ -f "$source_dir/$file" ]]; then
            echo "Copying $file to $target_dir"
            cp "$source_dir/$file" "$target_dir/" || {
                echo "Error: Failed to copy $file"
                return 1
            }
        else
            echo "Warning: $source_dir/$file not found, skipping"
        fi
    done
    
    echo "Dotfiles copy completed successfully!"
}