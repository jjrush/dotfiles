#!/usr/bin/env bash
# ---------------------------------------------------------------------------
# bootstrap/setup.sh – one-shot installer for the tiny wrapper files
# ---------------------------------------------------------------------------
# Usage:  bash bootstrap/setup.sh [bash|zsh]
#   • If no argument is given, the script infers the current shell.
#   • It backs up any existing rc/profile files as *.pre-dotfiles.YYYYMMDD.
#   • It writes (or overwrites) the wrapper that sources ~/dotfiles/shell/…
#   • It also creates the appropriate *login* file symlink (.bash_profile or
#     .zprofile) so login shells behave the same.
# ---------------------------------------------------------------------------
set -euo pipefail

# --- helper: timestamped backup --------------------------------------------
backup() {
  local target=$1
  if [[ -e "$target" && ! -L "$target" ]]; then
    local ts
    ts=$(date +%Y%m%d-%H%M%S)
    mv "$target" "${target}.pre-dotfiles.$ts"
    echo "Backed up $target → ${target}.pre-dotfiles.$ts"
  fi
}

# --- detect repo root -------------------------------------------------------
DOTFILES_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"

# --- figure out which shell to prepare -------------------------------------
requested_shell=${1:-}
if [[ -n "$requested_shell" ]]; then
  shell=$requested_shell
else
  shell=$(basename "$SHELL")   # fallback to current shell
fi

case "$shell" in
  bash)
    echo "Setting up tiny wrapper for bash (and bash-login)…"
    backup "$HOME/.bashrc"
    backup "$HOME/.bash_profile"

    cat > "$HOME/.bashrc" <<EOF
# Auto-generated by dotfiles/bootstrap/setup.sh
DOTFILES_DIR="$DOTFILES_DIR"
for f in "\$DOTFILES_DIR"/shell/common/* "\$DOTFILES_DIR"/shell/bash/*; do
  [ -r "\$f" ] && . "\$f"
done
EOF

    ln -sf "$HOME/.bashrc" "$HOME/.bash_profile"
    echo "→ ~/.bashrc written and ~/.bash_profile symlinked to it"
    ;;

  zsh)
    echo "Setting up tiny wrapper for zsh (and zsh-login)…"
    backup "$HOME/.zshrc"
    backup "$HOME/.zprofile"

    cat > "$HOME/.zshrc" <<EOF
# Auto-generated by dotfiles/bootstrap/setup.sh
DOTFILES_DIR="$DOTFILES_DIR"
for f in "\$DOTFILES_DIR"/shell/common/* "\$DOTFILES_DIR"/shell/zsh/*; do
  [ -r "\$f" ] && source "\$f"
done
EOF

    ln -sf "$HOME/.zshrc" "$HOME/.zprofile"
    echo "→ ~/.zshrc written and ~/.zprofile symlinked to it"
    ;;

  *)
    echo "Error: unsupported shell '$shell'. Use 'bash' or 'zsh'." >&2
    exit 1
    ;;
 esac

echo "All done!  Open a new terminal or run 'source ~/.${shell}rc' now."

# ----- also symlink helper tools -------------------------------------------
echo "Linking helper scripts into ~/bin …"
bash "${DOTFILES_DIR}/bootstrap/link_tools.sh" 